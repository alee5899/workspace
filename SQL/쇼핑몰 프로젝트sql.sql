board_reply# 도서  쇼핑몰 프로젝트 테이블

#도서 카테고리 테이블(소설,자기계발,IT서적)
CREATE TABLE book_category(
	CATE_CODE INT PRIMARY KEY AUTO_INCREMENT
,	CATE_NAME VARCHAR(30) NOT NULL UNIQUE 
);

INSERT INTO book_category VALUES(1, 'IT/인터넷');
INSERT INTO book_category VALUES(2, '자기계발');
INSERT INTO book_category VALUES(3, '소설');
COMMIT;


SELECT * FROM book_category;
 
#도서 테이블
CREATE TABLE book (
BOOK_CODE INT PRIMARY KEY AUTO_INCREMENT
,	BOOK_NAME VARCHAR(30) NOT NULL
,	BOOK_PRICE INT NOT NULL
,	PUBLISHER VARCHAR(30) NOT NULL
,	BOOK_INFO VARCHAR(100)
,	REG_DATE DATETIME DEFAULT SYSDATE()
,	BOOK_STOCK INT DEFAULT 10
, CATE_CODE INT NOT NULL REFERENCES book_category (CATE_CODE)
);

SELECT * FROM book;


# 도서 이미지 정보
CREATE TABLE BOOK_IMG(
	IMG_CODE INT PRIMARY KEY AUTO_INCREMENT,
	ORIGIN_FILE_NAME VARCHAR(100) NOT NULL,
	ATTACHED_FILE_NAME VARCHAR(100) NOT NULL,
	IS_MAIN VARCHAR(3) NOT NULL,
	BOOK_CODE INT NOT NULL REFERENCES book (BOOK_CODE) ON DELETE CASCADE
	);
	
	# 한 번에 여러 데이터 INSERT하기
INSERT INTO BOOK_IMG (IMG_CODE,ORIGIN_FILE_NAME, ATTACHED_FILE_NAME, IS_MAIN, BOOK_CODE)
VALUES
    (1,'aaa.jpg', '1111-2222.jpg', 'Y', 1),
    (2,'aaa.jpg', '1111-2222.jpg', 'N', 1),
    (3,'aaa.jpg', '1111-2222.jpg', 'N', 1);
	
	
	# 모든 상품에 대해서 첨부된 상품이미지명,상품명,가격을 조회
	#메인 이미지만 조회
	SELECT BOOK_NAME
		,BOOK_PRICE
		,ATTACHED_FILE_NAME
	FROM book INNER JOIN BOOK_IMG
	ON book.BOOK_CODE = book_img.BOOK_CODE
	WHERE IS_MAIN = 'Y'; 
	

	
	SELECT * FROM  book_Img;

#쇼핑몰 회원 테이블
CREATE TABLE SHOP_USER(
USER_ID VARCHAR(30) PRIMARY KEY
,	USER_PW VARCHAR(30) NOT NULL
,	USER_NAME VARCHAR(10) NOT NULL
,	USER_EMAIL VARCHAR(30)
,	USER_TEL VARCHAR(16) NOT NULL UNIQUE
,	USER_ROLL VARCHAR(10) DEFAULT 'USER' #권한 : USER-사용자, ADMIN-관리자
,	IS_USING VARCHAR(10) DEFAULT 'Y'
,	JOIN_DATE DATETIME DEFAULT SYSDATE()
);

INSERT INTO shop_user (USER_ID, USER_PW, USER_NAME, USER_EMAIL, USER_TEL, USER_ROLL, IS_USING, JOIN_DATE) 
VALUES ('admin', '1111', '관리자', 'aa@gmail.com', '010-987-4321', 'ADMIN', 'Y', NOW());



COMMIT;


SELECT USER_ID
        ,USER_NAME
        ,USER_ROLL FROM shop_user
WHERE USER_ID = '111'
AND USER_pw = 111;

SELECT * FROM SHOP_USER;

SELECT * FROM board;
SELECT * FROM board_reply;

# Book 테이블에 저장된 BOOK_CODE 중 가장 큰 수 조회
SELECT IFNULL(MAX(BOOK_CODE),0) + 1  FROM book;
